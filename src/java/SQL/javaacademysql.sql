DROP TABLE HINWEISE if exists;
DROP TABLE TestParam IF EXISTS
DROP TABLE Tests IF EXISTS
DROP TABLE Userlevel IF EXISTS
DROP TABLE Eingaben IF EXISTS
DROP TABLE user IF EXISTS
DROP TABLE Methodenparameter IF EXISTS
DROP TABLE Aufgaben IF EXISTS
DROP TABLE Kategorien IF EXISTS
DROP TABLE Rang IF EXISTS




CREATE TABLE user( 
ID integer GENERATED BY DEFAULT AS IDENTITY,
username VARCHAR(40),
passwort INTEGER,
email VARCHAR(100),
usergruppe VARCHAR(50) DEFAULT 'schueler',
PRIMARY KEY(ID));

CREATE TABLE Rang(
level integer,
rangname VARCHAR(50),
PRIMARY KEY(level));

CREATE TABLE userlevel(
userID integer GENERATED BY DEFAULT AS IDENTITY,
aktLvl integer,
aktExp integer,
PRIMARY KEY(userid),
FOREIGN KEY (userid) REFERENCES user(ID),
FOREIGN KEY (aktLvl) REFERENCES Rang(level));


CREATE TABLE Kategorien(
ID INTEGER GENERATED BY DEFAULT AS IDENTITY,
kategoriename VARCHAR(100),
PRIMARY KEY(id))

CREATE TABLE Aufgaben(
ID INTEGER GENERATED BY DEFAULT AS IDENTITY,
beschreibung VARCHAR(20000),
kategorieID INTEGER,
autor VARCHAR(100),
methodenname VARCHAR(100),
Datentyp VARCHAR(30),
mindestlevel INTEGER,
gegEXP INTEGER,
PRIMARY KEY(id),
FOREIGN KEY (kategorieID) REFERENCES Kategorien(ID),
FOREIGN KEY (mindestlevel) REFERENCES Rang(level));

CREATE TABLE Eingaben(
AufgabenID INTEGER,
UserID INTEGER,
text VARCHAR(20000),
geloest BOOLEAN DEFAULT 'FALSE',
PRIMARY KEY(aufgabenid, userid),
FOREIGN KEY (UserID) REFERENCES user(ID),
FOREIGN KEY (AufgabenID) REFERENCES Aufgaben(ID));


CREATE TABLE MethodenParameter(
aufgabenID Integer,
paraname VARCHAR(30),
Datentyp VARCHAR(30),
PRIMARY KEY(aufgabenID, paraname),
FOREIGN KEY (aufgabenID) REFERENCES Aufgaben(ID));

CREATE TABLE Tests(
AufgabenID INTEGER,
testID INTEGER,
erwtErg VARCHAR(20000),
ergHash INTEGER,
PRIMARY KEY(testID, aufgabenID),
FOREIGN KEY (AufgabenID) REFERENCES Aufgaben(ID));

CREATE TABLE TestParam(
AufgabenID INTEGER,
testID INTEGER,
paraname VARCHAR(200),
typ VARCHAR(200),
wert VARCHAR(20000),
PRIMARY KEY (AufgabenID, testID, paraname),
FOREIGN KEY (paraname, AufgabenID) REFERENCES MethodenParameter(paraname, AufgabenID));


CREATE TABLE Hinweise(
Hinweis VarChar(200) DEFAULT '',
AufgabenID INTEGER,
PRIMARY KEY (Hinweis),
FOREIGN KEY (AufgabenID) REFERENCES Aufgaben(ID)
);


INSERT INTO user VALUES ('0', 'admin', '-529743353', 'feadare@rbb.do.nw.schule.de','admin'); 

INSERT INTO user VALUES ('1', 'feaday', '-34591757', 'yoshi67@hotmail.de', 'developer');

INSERT INTO user VALUES ('2', 'taxim11', '-34591757', 'duplo23@yandex.ru', 'schueler');

INSERT INTO Rang VALUES ('0', 'Admi(n)ral');

INSERT INTO Rang VALUES ('1', 'Neuling');

INSERT INTO Rang VALUES ('2', 'Copy-Pasteter');

INSERT INTO Rang VALUES ('3', 'Neuling Abstract Class');

INSERT INTO Rang VALUES ('4', 'Neuling First Class');

INSERT INTO Rang VALUES ('5', 'Lehrling I');

INSERT INTO Rang VALUES ('6', 'Lehrling II');

INSERT INTO Rang VALUES ('7', 'Lehrling III');

INSERT INTO Rang VALUES ('8', 'Lehrling IIII');

INSERT INTO Rang VALUES ('9', 'Wichtel Code');

INSERT INTO Rang VALUES ('10', 'Variabel Fee');

INSERT INTO Rang VALUES ('11', 'Klassen Raider');

INSERT INTO Rang VALUES ('12', 'Quellcode Prädiger');

INSERT INTO Rang VALUES ('13', 'Code Beschwörer' );

INSERT INTO Rang VALUES ('14', 'Bit Priester');

INSERT INTO Rang VALUES ('15', 'Error Schamane');

INSERT INTO Rang VALUES ('16', 'Dunkler Coder');

INSERT INTO Rang VALUES ('17', 'JavAkrobat');

INSERT INTO Rang VALUES ('18', 'Daten Jongleur');

INSERT INTO Rang VALUES ('19', 'Konstruktor');

INSERT INTO Rang VALUES ('20', 'Mächtiger Java Meister');

INSERT INTO Rang VALUES ('21', 'Überlegener Server Admin');

INSERT INTO Rang VALUES ('22', 'Programier Naturtalent');

INSERT INTO Rang VALUES ('23', 'Übermenschlicher Coder');

INSERT INTO Rang VALUES ('24', '0101011101100101011100110110010101101110');

INSERT INTO Rang VALUES ('25', 'Binäres Wesen');

INSERT INTO Rang VALUES ('26', 'Infernaler Daten Dämon');

INSERT INTO Rang VALUES ('27', 'Lucifer des Codes');

INSERT INTO Rang VALUES ('28', 'Heiliger Code Engel');

INSERT INTO Rang VALUES ('29', 'Erz-Engel des Programierens');

INSERT INTO Rang VALUES ('30', 'Programmier Gottheit');

INSERT INTO userlevel VALUES ('0', '0', '0');

INSERT INTO userlevel VALUES ('1', '20', '20');

INSERT INTO userlevel VALUES ('2', '1', '5');

INSERT INTO Kategorien VALUES ('1', 'Basics');

INSERT INTO Kategorien VALUES ('2', 'Fallunterscheidungen');

INSERT INTO Kategorien VALUES ('3', 'Schleifen');

INSERT INTO Kategorien VALUES ('4', 'Strings');

INSERT INTO Kategorien VALUES ('5', 'Logik');

INSERT INTO Kategorien VALUES ('6', 'Zahlen');

INSERT INTO Kategorien VALUES ('7', 'Arrays');

INSERT INTO Kategorien VALUES ('8', 'Felder');

INSERT INTO Kategorien VALUES ('9', 'Fortgeschrittene');

INSERT INTO Kategorien VALUES ('10', 'Andere');

